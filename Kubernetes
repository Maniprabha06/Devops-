Kubernetes --> Orchestration engine
Orchestration means Management
By Default it has advanced features of Docker
Replacement of docker swarm
Written in Go programming language

Features:
- Open source and portable platform
- Automates Scaling of Workloads
- Groups Containers into Logical units
- Google's Brainchild.Now donated to CNCF
- written in Go Programming Language
- A Container Orchestration tool

Advantages:
- Self Healing
- Automated Rollbacks
- Auto Scaling
- Load Balancing

Kubernetes Master has 
- API Server  (users communicate through this API)
- Scheduler (If one pod breakdowns search for available pod)
- Controller Manager (cluster related tasks are controlled | scaling)
- etcd (Key-value pair | Stores cluster,node related information | database)

Servies: (both has to run)
- kubelet -> shares information with master ,checks working of pod
- kube-proxy -> network related service, load balancing ,pod forwarding 


Pod --> Groups container into logical units (manage all containers)
pod is a wrapper of container
UI --> manage through dashboards
CLI --> kubectl --> can manage all the cluster (!Recommended)

Can create kubernetes cluster using :
- minicube
- kubeadm
- AWS ETS
- google kubernetes service
- azure kubernetes service

Docker Swarm --> has a replication of containers
If one breakdown then create another container & split the workloads

Kubernetes is better than swarm:
- community (wide-range)
- Most company's prefer
- More advantages

Borg(Google) -> Kubernetes
- Workload orchestrators enables treating clusters of machine as a single resource
- These often include utilities and standard interfaces to address
      * Efficient scheduling across instances
      * Health checks
      * Service Discovery
      * Configuration Management
      * Autoscaling
      * Persistant storage
      * Networking

Control plane - System components run (Kubernetes system)
Data plane - Has User application
System <----> cloud
         API

Kubernetes standard Interfaces
- Container Runtime Interfaces(CRI)
- Container Storage Interfaces(CSI)
- Container Network Interfaces(CNI)

Popular Container Runtimes:
- Container-d
- Cri-O

Container Network Interfaces:
-Calico
-Cilium
-Flannel
-Cloud Specific CNI plugins
    - Amazon VPC CNI
    - Azure CNI
    - Google Cloud CNI

Container Storage Interface:
-Cloud specific CSI Driver
    - Amazon EBS CSI Driver
    - Compute engine persistent disk CSI driver
    - Azure disk container CSI driver
-Cert Manager CSI Driver
-Secrete store CSI driver


Kubernetes used to automate the container...
Docker--> manage it manually!
Kubernetes ... scaling,management,deployment...
